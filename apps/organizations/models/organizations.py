"""
Organizations can be created by the ``authenticated`` & ``verified`` users.

Currently lets assume that any django user is both authentic and verified,
we'll later pass the authentication mechanism to a different server that
handles user authentication for us (somewhat similar to Auth0 service).
"""
from django.contrib import admin
from django.db import models


class Organization(models.Model):
    """
    Organization model directly extends `models.Model`, yeah only for now.
    We'll surely do something about it. Pakka!!

     * A ``User`` may have multiple organizations registered.
    """
    # lets not have a foreign key here since we know that authentication needs to
    # be handled by a different server all along
    # the user_id here represents the unique user id given to the user by the remote server
    # this id must be used to query the remote server regarding user details
    # the max_length should match the length of the ids generated by the remote server
    user_id = models.CharField(max_length=128, null=False, blank=False)

    # organizations need to have a name at least :)
    name = models.CharField(max_length=64, null=False, blank=False)

    # lets add other attributes as and when required and necessary
    # lazy is the new awesome :P

    def __str__(self):
        return self.name


class OrganizationAdmin(admin.ModelAdmin):
    pass


admin.site.register(Organization, OrganizationAdmin)
