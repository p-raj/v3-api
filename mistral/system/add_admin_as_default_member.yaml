---
version: '2.0'
add_admin_as_default_member:
  description: Add the User creating the organization as the member as well.
  type: direct
  input:
    - api_server: http://172.18.0.1:8000
    - body
    - widget
    - process__create_organization: d6d4edf8-aab0-44b9-a3ee-a93d56008c4b
    - process__fetch_user_profile: fe91e51c-f4aa-4314-9800-70b7a737b9d1
    - process__add_member: 2b4735da-9c43-4916-aae5-2e38755a6c8a
    - headers: {}
  tasks:
    create_organization:
      action: std.http
      input:
        url: <% $.api_server %>/api/v1/widgets/<% $.widget %>/<% $.process__create_organization %>/
        method: POST
        body: <% $.body %>
        headers: <% $.headers %>
      publish:
        data: <% task(create_organization).result.content %>
        cookies: <% task(create_organization).result.cookies %>
        elapsed: <% task(create_organization).result.elapsed %>
        encoding: <% task(create_organization).result.encoding %>
        headers: <% task(create_organization).result.headers %>
        history: <% task(create_organization).result.history %>
        reason: <% task(create_organization).result.reason %>
        status: <% task(create_organization).result.status %>
        url: <% task(create_organization).result.url %>
      publish-on-error:
        data: <% task(create_organization).result.content %>
        cookies: <% task(create_organization).result.cookies %>
        elapsed: <% task(create_organization).result.elapsed %>
        encoding: <% task(create_organization).result.encoding %>
        headers: <% task(create_organization).result.headers %>
        history: <% task(create_organization).result.history %>
        reason: <% task(create_organization).result.reason %>
        status: <% task(create_organization).result.status %>
        url: <% task(create_organization).result.url %>
      on-success:
        - fetch_user_profile
    fetch_user_profile:
      action: std.http
      input:
        url: <% $.api_server %>/api/v1/widgets/<% $.widget %>/<% $.process__fetch_user_profile %>/
        method: POST
        body: '{ "uuid": "<% task(create_organization).result.content.owner %>" }'
        headers: <% $.headers %>
      publish:
        data: <% task(fetch_user_profile).result.content %>
        cookies: <% task(fetch_user_profile).result.cookies %>
        elapsed: <% task(fetch_user_profile).result.elapsed %>
        encoding: <% task(fetch_user_profile).result.encoding %>
        headers: <% task(fetch_user_profile).result.headers %>
        history: <% task(fetch_user_profile).result.history %>
        reason: <% task(fetch_user_profile).result.reason %>
        status: <% task(fetch_user_profile).result.status %>
        url: <% task(fetch_user_profile).result.url %>
      publish-on-error:
        data: <% task(fetch_user_profile).result.content %>
        cookies: <% task(fetch_user_profile).result.cookies %>
        elapsed: <% task(fetch_user_profile).result.elapsed %>
        encoding: <% task(fetch_user_profile).result.encoding %>
        headers: <% task(fetch_user_profile).result.headers %>
        history: <% task(fetch_user_profile).result.history %>
        reason: <% task(fetch_user_profile).result.reason %>
        status: <% task(fetch_user_profile).result.status %>
        url: <% task(fetch_user_profile).result.url %>
      on-success:
        - add_member
    add_member:
      action: std.http
      input:
        url: <% $.api_server %>/api/v1/widgets/<% $.widget %>/<% $.process__add_member %>/
        method: POST
        body: '{ "name": "<% task(fetch_user_profile).result.content.name %>", "email": "<% task(fetch_user_profile).result.content.email %>", "type": "user", "owner": "<% task(create_organization).result.content.owner %>", "organization" : "<% task(create_organization).result.content.uuid %>"}'
        headers: <% $.headers %>
