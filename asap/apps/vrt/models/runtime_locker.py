"""
Runtime Locker provides an interface to manage multiple runtimes
corresponding to a single token.
"""

import uuid

from django.contrib import admin
from django.db import models
from django.utils.translation import ugettext_lazy as _

from asap.apps.vrt.models.runtime import Runtime


class RuntimeLocker(models.Model):
    uuid = models.UUIDField(
        default=uuid.uuid4,
        editable=False,
        help_text=_('Non-editable, to be generated by system itself.'),
    )

    # this uuid may be used to access many runtimes
    # associated with it
    # each runtime may have a unique token associated to it
    # we'll do that in the through mapping
    runtimes = models.ManyToManyField(Runtime)

    # timestamps for auditing
    # move these to a mixin for greater good
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return '{0}'.format(self.uuid)


@admin.register(RuntimeLocker)
class RuntimeLockerAdmin(admin.ModelAdmin):
    readonly_fields = ['uuid']
    fields = ['runtimes']
